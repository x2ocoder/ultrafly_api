// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.12.0
// source: tfruit/v1/tfruit.proto

package tfruit_v1

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/x2ocoder/ultrafly_api/ffruit/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FfruitSpecialCommand int32

const (
	FfruitSpecialCommand_IGNORE_ME   FfruitSpecialCommand = 0 // Tell Ffruit Program: Do nothing
	FfruitSpecialCommand_REDO_PRESET FfruitSpecialCommand = 1 // Tell Ffruit Program: Send this special basket to DACS and read new Preset ####
)

// Enum value maps for FfruitSpecialCommand.
var (
	FfruitSpecialCommand_name = map[int32]string{
		0: "IGNORE_ME",
		1: "REDO_PRESET",
	}
	FfruitSpecialCommand_value = map[string]int32{
		"IGNORE_ME":   0,
		"REDO_PRESET": 1,
	}
)

func (x FfruitSpecialCommand) Enum() *FfruitSpecialCommand {
	p := new(FfruitSpecialCommand)
	*p = x
	return p
}

func (x FfruitSpecialCommand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FfruitSpecialCommand) Descriptor() protoreflect.EnumDescriptor {
	return file_tfruit_v1_tfruit_proto_enumTypes[0].Descriptor()
}

func (FfruitSpecialCommand) Type() protoreflect.EnumType {
	return &file_tfruit_v1_tfruit_proto_enumTypes[0]
}

func (x FfruitSpecialCommand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FfruitSpecialCommand.Descriptor instead.
func (FfruitSpecialCommand) EnumDescriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{0}
}

// Reusable - UHF Config
// Debug -> UHF  uhf_req/UltraflyConfiguration
// UHF -> DEBUG  uhf_res/UltraflyConfiguration
type UltraflyConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp    uint32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	InputGpio_1  uint32 `protobuf:"varint,11,opt,name=input_gpio_1,json=inputGpio1,proto3" json:"input_gpio_1,omitempty"` // Define which linux GPIO pin is used for the respective GPIO
	InputGpio_2  uint32 `protobuf:"varint,12,opt,name=input_gpio_2,json=inputGpio2,proto3" json:"input_gpio_2,omitempty"`
	InputGpio_3  uint32 `protobuf:"varint,13,opt,name=input_gpio_3,json=inputGpio3,proto3" json:"input_gpio_3,omitempty"`
	InputGpio_4  uint32 `protobuf:"varint,14,opt,name=input_gpio_4,json=inputGpio4,proto3" json:"input_gpio_4,omitempty"`
	OutputGpio_1 uint32 `protobuf:"varint,21,opt,name=output_gpio_1,json=outputGpio1,proto3" json:"output_gpio_1,omitempty"`
	OutputGpio_2 uint32 `protobuf:"varint,22,opt,name=output_gpio_2,json=outputGpio2,proto3" json:"output_gpio_2,omitempty"`
	OutputGpio_3 uint32 `protobuf:"varint,23,opt,name=output_gpio_3,json=outputGpio3,proto3" json:"output_gpio_3,omitempty"`
	OutputGpio_4 uint32 `protobuf:"varint,24,opt,name=output_gpio_4,json=outputGpio4,proto3" json:"output_gpio_4,omitempty"`
	OutputGpio_5 uint32 `protobuf:"varint,25,opt,name=output_gpio_5,json=outputGpio5,proto3" json:"output_gpio_5,omitempty"`
	OutputGpio_6 uint32 `protobuf:"varint,26,opt,name=output_gpio_6,json=outputGpio6,proto3" json:"output_gpio_6,omitempty"`
}

func (x *UltraflyConfiguration) Reset() {
	*x = UltraflyConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UltraflyConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UltraflyConfiguration) ProtoMessage() {}

func (x *UltraflyConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UltraflyConfiguration.ProtoReflect.Descriptor instead.
func (*UltraflyConfiguration) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{0}
}

func (x *UltraflyConfiguration) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *UltraflyConfiguration) GetInputGpio_1() uint32 {
	if x != nil {
		return x.InputGpio_1
	}
	return 0
}

func (x *UltraflyConfiguration) GetInputGpio_2() uint32 {
	if x != nil {
		return x.InputGpio_2
	}
	return 0
}

func (x *UltraflyConfiguration) GetInputGpio_3() uint32 {
	if x != nil {
		return x.InputGpio_3
	}
	return 0
}

func (x *UltraflyConfiguration) GetInputGpio_4() uint32 {
	if x != nil {
		return x.InputGpio_4
	}
	return 0
}

func (x *UltraflyConfiguration) GetOutputGpio_1() uint32 {
	if x != nil {
		return x.OutputGpio_1
	}
	return 0
}

func (x *UltraflyConfiguration) GetOutputGpio_2() uint32 {
	if x != nil {
		return x.OutputGpio_2
	}
	return 0
}

func (x *UltraflyConfiguration) GetOutputGpio_3() uint32 {
	if x != nil {
		return x.OutputGpio_3
	}
	return 0
}

func (x *UltraflyConfiguration) GetOutputGpio_4() uint32 {
	if x != nil {
		return x.OutputGpio_4
	}
	return 0
}

func (x *UltraflyConfiguration) GetOutputGpio_5() uint32 {
	if x != nil {
		return x.OutputGpio_5
	}
	return 0
}

func (x *UltraflyConfiguration) GetOutputGpio_6() uint32 {
	if x != nil {
		return x.OutputGpio_6
	}
	return 0
}

// CMAC Message Envelope
// Used for darn near everything possible between UHF <-> NFC (may be spied upon by web ui)
// Helps to prevent tampering of data
type UltraflySignedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic []byte `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"` // Protobuf Type (since can't be detected from data)
	Data  []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`   // Protobuf Wire Serialized Data
	Sig   []byte `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`     // CMAC Signature = CMAC(secret, topic+data)
}

func (x *UltraflySignedMessage) Reset() {
	*x = UltraflySignedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UltraflySignedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UltraflySignedMessage) ProtoMessage() {}

func (x *UltraflySignedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UltraflySignedMessage.ProtoReflect.Descriptor instead.
func (*UltraflySignedMessage) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{1}
}

func (x *UltraflySignedMessage) GetTopic() []byte {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *UltraflySignedMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UltraflySignedMessage) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// Reusable - UHF & NFC Connection
// via nfc_req/ReaderPing - Hi Reader, are you there? What time is it?
type ReaderPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UltraflyUid []byte `protobuf:"bytes,1,opt,name=ultrafly_uid,json=ultraflyUid,proto3" json:"ultrafly_uid,omitempty"`
	Station     uint32 `protobuf:"varint,3,opt,name=station,proto3" json:"station,omitempty"`
}

func (x *ReaderPing) Reset() {
	*x = ReaderPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReaderPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReaderPing) ProtoMessage() {}

func (x *ReaderPing) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReaderPing.ProtoReflect.Descriptor instead.
func (*ReaderPing) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{2}
}

func (x *ReaderPing) GetUltraflyUid() []byte {
	if x != nil {
		return x.UltraflyUid
	}
	return nil
}

func (x *ReaderPing) GetStation() uint32 {
	if x != nil {
		return x.Station
	}
	return 0
}

// Reusable - UHF & NFC Connection
// via nfc_res/ReaderPing - I'm here, the time is X
type ReaderPong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClearlyUid []byte `protobuf:"bytes,1,opt,name=clearly_uid,json=clearlyUid,proto3" json:"clearly_uid,omitempty"`
	Timestamp  uint32 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ReaderPong) Reset() {
	*x = ReaderPong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReaderPong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReaderPong) ProtoMessage() {}

func (x *ReaderPong) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReaderPong.ProtoReflect.Descriptor instead.
func (*ReaderPong) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{3}
}

func (x *ReaderPong) GetClearlyUid() []byte {
	if x != nil {
		return x.ClearlyUid
	}
	return nil
}

func (x *ReaderPong) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Very specific to Ishida Trusted Fruit System
// UHF -> NFC - I have 1234 grams of high quality fruit!
type BasketScanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasketUid     []byte                  `protobuf:"bytes,1,opt,name=basket_uid,json=basketUid,proto3" json:"basket_uid,omitempty"`
	Timestamp     uint32                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Station       uint32                  `protobuf:"varint,3,opt,name=station,proto3" json:"station,omitempty"`     // Unused Manufactuer number
	Collector     uint32                  `protobuf:"varint,4,opt,name=collector,proto3" json:"collector,omitempty"` // Unused Operator
	Farmer        uint32                  `protobuf:"varint,5,opt,name=farmer,proto3" json:"farmer,omitempty"`       // Filled in with data from NFC Scanner
	Card          uint32                  `protobuf:"varint,6,opt,name=card,proto3" json:"card,omitempty"`           // Filled in with data from NFC Scanner
	Product       uint32                  `protobuf:"varint,7,opt,name=product,proto3" json:"product,omitempty"`
	Weight        float32                 `protobuf:"fixed32,8,opt,name=weight,proto3" json:"weight,omitempty"`
	WeightUom     string                  `protobuf:"bytes,9,opt,name=weight_uom,json=weightUom,proto3" json:"weight_uom,omitempty"`
	MachineNumber uint32                  `protobuf:"varint,10,opt,name=machine_number,json=machineNumber,proto3" json:"machine_number,omitempty"`    // Use this instead of station
	Command       v1.FfruitSpecialCommand `protobuf:"varint,20,opt,name=command,proto3,enum=ffruit.v1.FfruitSpecialCommand" json:"command,omitempty"` // Typical: Not placed on a typical UHF Tag - only special use at the factory internal
}

func (x *BasketScanInfo) Reset() {
	*x = BasketScanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasketScanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasketScanInfo) ProtoMessage() {}

func (x *BasketScanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasketScanInfo.ProtoReflect.Descriptor instead.
func (*BasketScanInfo) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{4}
}

func (x *BasketScanInfo) GetBasketUid() []byte {
	if x != nil {
		return x.BasketUid
	}
	return nil
}

func (x *BasketScanInfo) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BasketScanInfo) GetStation() uint32 {
	if x != nil {
		return x.Station
	}
	return 0
}

func (x *BasketScanInfo) GetCollector() uint32 {
	if x != nil {
		return x.Collector
	}
	return 0
}

func (x *BasketScanInfo) GetFarmer() uint32 {
	if x != nil {
		return x.Farmer
	}
	return 0
}

func (x *BasketScanInfo) GetCard() uint32 {
	if x != nil {
		return x.Card
	}
	return 0
}

func (x *BasketScanInfo) GetProduct() uint32 {
	if x != nil {
		return x.Product
	}
	return 0
}

func (x *BasketScanInfo) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *BasketScanInfo) GetWeightUom() string {
	if x != nil {
		return x.WeightUom
	}
	return ""
}

func (x *BasketScanInfo) GetMachineNumber() uint32 {
	if x != nil {
		return x.MachineNumber
	}
	return 0
}

func (x *BasketScanInfo) GetCommand() v1.FfruitSpecialCommand {
	if x != nil {
		return x.Command
	}
	return v1.FfruitSpecialCommand_IGNORE_ME
}

// NFC -> UHF - via uhf_req/CardScanInfo - "I saw this farmer/collector"
type CardScanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CardUid   []byte `protobuf:"bytes,2,opt,name=card_uid,json=cardUid,proto3" json:"card_uid,omitempty"`
	Collector uint32 `protobuf:"varint,4,opt,name=collector,proto3" json:"collector,omitempty"`
	Farmer    uint32 `protobuf:"varint,5,opt,name=farmer,proto3" json:"farmer,omitempty"`
}

func (x *CardScanInfo) Reset() {
	*x = CardScanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardScanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardScanInfo) ProtoMessage() {}

func (x *CardScanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardScanInfo.ProtoReflect.Descriptor instead.
func (*CardScanInfo) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{5}
}

func (x *CardScanInfo) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CardScanInfo) GetCardUid() []byte {
	if x != nil {
		return x.CardUid
	}
	return nil
}

func (x *CardScanInfo) GetCollector() uint32 {
	if x != nil {
		return x.Collector
	}
	return 0
}

func (x *CardScanInfo) GetFarmer() uint32 {
	if x != nil {
		return x.Farmer
	}
	return 0
}

// Very specific to Ishida Trusted Fruit System
// UHF -> NFC - via nfc_req/StationInfo - "Okay here's the station status"
type StationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp    uint32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Collector    uint32 `protobuf:"varint,2,opt,name=collector,proto3" json:"collector,omitempty"`
	BasketUid    []byte `protobuf:"bytes,3,opt,name=basket_uid,json=basketUid,proto3" json:"basket_uid,omitempty"`
	CardUid      []byte `protobuf:"bytes,4,opt,name=card_uid,json=cardUid,proto3" json:"card_uid,omitempty"`
	SystemOnline string `protobuf:"bytes,5,opt,name=system_online,json=systemOnline,proto3" json:"system_online,omitempty"` // Collector #123
	Infoline1    string `protobuf:"bytes,6,opt,name=infoline1,proto3" json:"infoline1,omitempty"`                           // Collector #123           |  Weight 2345g     | System Online   | System Standby
	Infoline2    string `protobuf:"bytes,7,opt,name=infoline2,proto3" json:"infoline2,omitempty"`                           // Logged In  |  Logged Out |  Farmer Confirm?  | Present Basket  | Collector Login?
}

func (x *StationInfo) Reset() {
	*x = StationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationInfo) ProtoMessage() {}

func (x *StationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationInfo.ProtoReflect.Descriptor instead.
func (*StationInfo) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{6}
}

func (x *StationInfo) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StationInfo) GetCollector() uint32 {
	if x != nil {
		return x.Collector
	}
	return 0
}

func (x *StationInfo) GetBasketUid() []byte {
	if x != nil {
		return x.BasketUid
	}
	return nil
}

func (x *StationInfo) GetCardUid() []byte {
	if x != nil {
		return x.CardUid
	}
	return nil
}

func (x *StationInfo) GetSystemOnline() string {
	if x != nil {
		return x.SystemOnline
	}
	return ""
}

func (x *StationInfo) GetInfoline1() string {
	if x != nil {
		return x.Infoline1
	}
	return ""
}

func (x *StationInfo) GetInfoline2() string {
	if x != nil {
		return x.Infoline2
	}
	return ""
}

// Very specific to Ishida Trusted Fruit System
// UHF -> NFC - via nfc_req/TfruitBasketMessage > "I have 1234 grams of high quality fruit!" Please Add this crypto(Record) to the NFC Card
// NFC -> UHF - via nfc_res/TfruitBasketMessage > "Farmer 234 agrees with the weight"        Please Add this signed(Record) to the UHF Card
type TfruitBasketMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasketUid      []byte                  `protobuf:"bytes,1,opt,name=basket_uid,json=basketUid,proto3" json:"basket_uid,omitempty"`                  // Typical 1+4 Byte // TODO: determine if this is worth using (probably not)
	Timestamp      uint32                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                  // Typical 1+4 Byte
	Station        uint32                  `protobuf:"varint,3,opt,name=station,proto3" json:"station,omitempty"`                                      // Typical 1+2 Byte
	Collector      uint32                  `protobuf:"varint,4,opt,name=collector,proto3" json:"collector,omitempty"`                                  // Typical 1+2 Byte
	Farmer         uint32                  `protobuf:"varint,5,opt,name=farmer,proto3" json:"farmer,omitempty"`                                        // Typical 1+4 Byte Impossible for UHF Scanner/Scale to Know // Provided by NFC Scanner on result
	Product        uint32                  `protobuf:"varint,6,opt,name=product,proto3" json:"product,omitempty"`                                      // Typical 1+2 Byte
	Weight         float32                 `protobuf:"fixed32,7,opt,name=weight,proto3" json:"weight,omitempty"`                                       // Typical 1+4 Byte
	WeightUom      string                  `protobuf:"bytes,8,opt,name=weight_uom,json=weightUom,proto3" json:"weight_uom,omitempty"`                  // Typical 1+1 Byte
	ResetTimestamp uint32                  `protobuf:"varint,9,opt,name=reset_timestamp,json=resetTimestamp,proto3" json:"reset_timestamp,omitempty"`  // Typical 1+4 Byte // TODO: determine if this is worth using
	FarmerCard     uint32                  `protobuf:"varint,10,opt,name=farmer_card,json=farmerCard,proto3" json:"farmer_card,omitempty"`             // Typical 1+4 Byte Impossible for UHF Scanner/Scale to Know // Provided by NFC Scanner on result
	Command        v1.FfruitSpecialCommand `protobuf:"varint,20,opt,name=command,proto3,enum=ffruit.v1.FfruitSpecialCommand" json:"command,omitempty"` // Typical: Not placed on a typical UHF Tag - only special use at the factory internal
}

func (x *TfruitBasketMessage) Reset() {
	*x = TfruitBasketMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TfruitBasketMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TfruitBasketMessage) ProtoMessage() {}

func (x *TfruitBasketMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TfruitBasketMessage.ProtoReflect.Descriptor instead.
func (*TfruitBasketMessage) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{7}
}

func (x *TfruitBasketMessage) GetBasketUid() []byte {
	if x != nil {
		return x.BasketUid
	}
	return nil
}

func (x *TfruitBasketMessage) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TfruitBasketMessage) GetStation() uint32 {
	if x != nil {
		return x.Station
	}
	return 0
}

func (x *TfruitBasketMessage) GetCollector() uint32 {
	if x != nil {
		return x.Collector
	}
	return 0
}

func (x *TfruitBasketMessage) GetFarmer() uint32 {
	if x != nil {
		return x.Farmer
	}
	return 0
}

func (x *TfruitBasketMessage) GetProduct() uint32 {
	if x != nil {
		return x.Product
	}
	return 0
}

func (x *TfruitBasketMessage) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *TfruitBasketMessage) GetWeightUom() string {
	if x != nil {
		return x.WeightUom
	}
	return ""
}

func (x *TfruitBasketMessage) GetResetTimestamp() uint32 {
	if x != nil {
		return x.ResetTimestamp
	}
	return 0
}

func (x *TfruitBasketMessage) GetFarmerCard() uint32 {
	if x != nil {
		return x.FarmerCard
	}
	return 0
}

func (x *TfruitBasketMessage) GetCommand() v1.FfruitSpecialCommand {
	if x != nil {
		return x.Command
	}
	return v1.FfruitSpecialCommand_IGNORE_ME
}

// UHF -> NFC - Please Add this Record to the NFC Card
type BasketLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TfruitBasket *TfruitBasketMessage `protobuf:"bytes,1,opt,name=tfruit_basket,json=tfruitBasket,proto3" json:"tfruit_basket,omitempty"`
}

func (x *BasketLogRequest) Reset() {
	*x = BasketLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasketLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasketLogRequest) ProtoMessage() {}

func (x *BasketLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasketLogRequest.ProtoReflect.Descriptor instead.
func (*BasketLogRequest) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{8}
}

func (x *BasketLogRequest) GetTfruitBasket() *TfruitBasketMessage {
	if x != nil {
		return x.TfruitBasket
	}
	return nil
}

// NFC -> UHF - This is the complete record I recorded
type BasketLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasketUid []byte  `protobuf:"bytes,1,opt,name=basket_uid,json=basketUid,proto3" json:"basket_uid,omitempty"`
	Timestamp uint32  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Station   uint32  `protobuf:"varint,3,opt,name=station,proto3" json:"station,omitempty"`
	Collector uint32  `protobuf:"varint,4,opt,name=collector,proto3" json:"collector,omitempty"`
	Farmer    uint32  `protobuf:"varint,5,opt,name=farmer,proto3" json:"farmer,omitempty"` // Filled in by NFC Scanner on result
	Product   uint32  `protobuf:"varint,6,opt,name=product,proto3" json:"product,omitempty"`
	Weight    float32 `protobuf:"fixed32,7,opt,name=weight,proto3" json:"weight,omitempty"`
	WeightUom string  `protobuf:"bytes,8,opt,name=weight_uom,json=weightUom,proto3" json:"weight_uom,omitempty"`
}

func (x *BasketLogResponse) Reset() {
	*x = BasketLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasketLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasketLogResponse) ProtoMessage() {}

func (x *BasketLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasketLogResponse.ProtoReflect.Descriptor instead.
func (*BasketLogResponse) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{9}
}

func (x *BasketLogResponse) GetBasketUid() []byte {
	if x != nil {
		return x.BasketUid
	}
	return nil
}

func (x *BasketLogResponse) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BasketLogResponse) GetStation() uint32 {
	if x != nil {
		return x.Station
	}
	return 0
}

func (x *BasketLogResponse) GetCollector() uint32 {
	if x != nil {
		return x.Collector
	}
	return 0
}

func (x *BasketLogResponse) GetFarmer() uint32 {
	if x != nil {
		return x.Farmer
	}
	return 0
}

func (x *BasketLogResponse) GetProduct() uint32 {
	if x != nil {
		return x.Product
	}
	return 0
}

func (x *BasketLogResponse) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *BasketLogResponse) GetWeightUom() string {
	if x != nil {
		return x.WeightUom
	}
	return ""
}

// UHF -> Debug
type UltraflyStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp             uint32                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Input1                bool                   `protobuf:"varint,11,opt,name=input1,proto3" json:"input1,omitempty"`
	Input2                bool                   `protobuf:"varint,12,opt,name=input2,proto3" json:"input2,omitempty"`
	Input3                bool                   `protobuf:"varint,13,opt,name=input3,proto3" json:"input3,omitempty"`
	Input4                bool                   `protobuf:"varint,14,opt,name=input4,proto3" json:"input4,omitempty"`
	Output1               bool                   `protobuf:"varint,21,opt,name=output1,proto3" json:"output1,omitempty"`
	Output2               bool                   `protobuf:"varint,22,opt,name=output2,proto3" json:"output2,omitempty"`
	Output3               bool                   `protobuf:"varint,23,opt,name=output3,proto3" json:"output3,omitempty"`
	Output4               bool                   `protobuf:"varint,24,opt,name=output4,proto3" json:"output4,omitempty"`
	Output5               bool                   `protobuf:"varint,25,opt,name=output5,proto3" json:"output5,omitempty"`
	Output6               bool                   `protobuf:"varint,26,opt,name=output6,proto3" json:"output6,omitempty"`
	UltraflyConfiguration *UltraflyConfiguration `protobuf:"bytes,50,opt,name=ultrafly_configuration,json=ultraflyConfiguration,proto3" json:"ultrafly_configuration,omitempty"`
}

func (x *UltraflyStatusResponse) Reset() {
	*x = UltraflyStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UltraflyStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UltraflyStatusResponse) ProtoMessage() {}

func (x *UltraflyStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UltraflyStatusResponse.ProtoReflect.Descriptor instead.
func (*UltraflyStatusResponse) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{10}
}

func (x *UltraflyStatusResponse) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *UltraflyStatusResponse) GetInput1() bool {
	if x != nil {
		return x.Input1
	}
	return false
}

func (x *UltraflyStatusResponse) GetInput2() bool {
	if x != nil {
		return x.Input2
	}
	return false
}

func (x *UltraflyStatusResponse) GetInput3() bool {
	if x != nil {
		return x.Input3
	}
	return false
}

func (x *UltraflyStatusResponse) GetInput4() bool {
	if x != nil {
		return x.Input4
	}
	return false
}

func (x *UltraflyStatusResponse) GetOutput1() bool {
	if x != nil {
		return x.Output1
	}
	return false
}

func (x *UltraflyStatusResponse) GetOutput2() bool {
	if x != nil {
		return x.Output2
	}
	return false
}

func (x *UltraflyStatusResponse) GetOutput3() bool {
	if x != nil {
		return x.Output3
	}
	return false
}

func (x *UltraflyStatusResponse) GetOutput4() bool {
	if x != nil {
		return x.Output4
	}
	return false
}

func (x *UltraflyStatusResponse) GetOutput5() bool {
	if x != nil {
		return x.Output5
	}
	return false
}

func (x *UltraflyStatusResponse) GetOutput6() bool {
	if x != nil {
		return x.Output6
	}
	return false
}

func (x *UltraflyStatusResponse) GetUltraflyConfiguration() *UltraflyConfiguration {
	if x != nil {
		return x.UltraflyConfiguration
	}
	return nil
}

// Set CMAC Key
// via uhf_req/UltraflySignKeySetRequest
type UltraflySignKeySetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NfcKeyMask   []byte `protobuf:"bytes,1,opt,name=nfc_key_mask,json=nfcKeyMask,proto3" json:"nfc_key_mask,omitempty"`       // For use UHF<->NFC: AES128 16 Byte Key     Key = KeyMask ^ "SUPERFLYDUPERFLY"
	DebugKeyMask []byte `protobuf:"bytes,2,opt,name=debug_key_mask,json=debugKeyMask,proto3" json:"debug_key_mask,omitempty"` // For use UHF<->Debug: AES128 16 Byte Key   Key = KeyMask ^ "SUPERFLYDUPERFLY"
}

func (x *UltraflySignKeySetRequest) Reset() {
	*x = UltraflySignKeySetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UltraflySignKeySetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UltraflySignKeySetRequest) ProtoMessage() {}

func (x *UltraflySignKeySetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UltraflySignKeySetRequest.ProtoReflect.Descriptor instead.
func (*UltraflySignKeySetRequest) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{11}
}

func (x *UltraflySignKeySetRequest) GetNfcKeyMask() []byte {
	if x != nil {
		return x.NfcKeyMask
	}
	return nil
}

func (x *UltraflySignKeySetRequest) GetDebugKeyMask() []byte {
	if x != nil {
		return x.DebugKeyMask
	}
	return nil
}

// via uhf_res/UltraflySignKeySetResponse
type UltraflySignKeySetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UltraflySignKeySetResponse) Reset() {
	*x = UltraflySignKeySetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UltraflySignKeySetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UltraflySignKeySetResponse) ProtoMessage() {}

func (x *UltraflySignKeySetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UltraflySignKeySetResponse.ProtoReflect.Descriptor instead.
func (*UltraflySignKeySetResponse) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{12}
}

func (x *UltraflySignKeySetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ContactInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    // Internal DB #
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Culture independent full name
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ContactInfo) Reset() {
	*x = ContactInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tfruit_v1_tfruit_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactInfo) ProtoMessage() {}

func (x *ContactInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tfruit_v1_tfruit_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactInfo.ProtoReflect.Descriptor instead.
func (*ContactInfo) Descriptor() ([]byte, []int) {
	return file_tfruit_v1_tfruit_proto_rawDescGZIP(), []int{13}
}

func (x *ContactInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ContactInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContactInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ContactInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

var File_tfruit_v1_tfruit_proto protoreflect.FileDescriptor

var file_tfruit_v1_tfruit_proto_rawDesc = []byte{
	0x0a, 0x16, 0x74, 0x66, 0x72, 0x75, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x66, 0x72, 0x75,
	0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x66, 0x72, 0x75, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x1a, 0x16, 0x66, 0x66, 0x72, 0x75, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x66,
	0x66, 0x72, 0x75, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x03, 0x0a, 0x15,
	0x55, 0x6c, 0x74, 0x72, 0x61, 0x66, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x67, 0x70, 0x69,
	0x6f, 0x5f, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x47, 0x70, 0x69, 0x6f, 0x31, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x67,
	0x70, 0x69, 0x6f, 0x5f, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x47, 0x70, 0x69, 0x6f, 0x32, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x5f, 0x67, 0x70, 0x69, 0x6f, 0x5f, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x47, 0x70, 0x69, 0x6f, 0x33, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x67, 0x70, 0x69, 0x6f, 0x5f, 0x34, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x47, 0x70, 0x69, 0x6f, 0x34, 0x12, 0x22, 0x0a, 0x0d, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x67, 0x70, 0x69, 0x6f, 0x5f, 0x31, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x47, 0x70, 0x69, 0x6f, 0x31, 0x12,
	0x22, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x67, 0x70, 0x69, 0x6f, 0x5f, 0x32,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x47, 0x70,
	0x69, 0x6f, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x67, 0x70,
	0x69, 0x6f, 0x5f, 0x33, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x47, 0x70, 0x69, 0x6f, 0x33, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x5f, 0x67, 0x70, 0x69, 0x6f, 0x5f, 0x34, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x47, 0x70, 0x69, 0x6f, 0x34, 0x12, 0x22, 0x0a, 0x0d, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x67, 0x70, 0x69, 0x6f, 0x5f, 0x35, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x47, 0x70, 0x69, 0x6f, 0x35, 0x12,
	0x22, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x67, 0x70, 0x69, 0x6f, 0x5f, 0x36,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x47, 0x70,
	0x69, 0x6f, 0x36, 0x22, 0x53, 0x0a, 0x15, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x66, 0x6c, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0x49, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6c, 0x74, 0x72, 0x61, 0x66,
	0x6c, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x75, 0x6c,
	0x74, 0x72, 0x61, 0x66, 0x6c, 0x79, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x6e,
	0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x55,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0xe4, 0x02, 0x0a, 0x0e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x55,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x72, 0x6d,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x61, 0x72, 0x6d, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x75, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x55, 0x6f, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x66, 0x66, 0x72, 0x75, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x66, 0x72, 0x75, 0x69, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x7d, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x53,
	0x63, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x55, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x22, 0xe4, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x55, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x22, 0xf8, 0x02,
	0x0a, 0x13, 0x54, 0x66, 0x72, 0x75, 0x69, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61,
	0x72, 0x6d, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x61, 0x72, 0x6d,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x75,
	0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x55, 0x6f, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x39, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x66, 0x66, 0x72, 0x75, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x66, 0x72, 0x75, 0x69,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x57, 0x0a, 0x10, 0x42, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0d,
	0x74, 0x66, 0x72, 0x75, 0x69, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x66, 0x72, 0x75, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x66, 0x72, 0x75, 0x69, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0c, 0x74, 0x66, 0x72, 0x75, 0x69, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x22, 0xf1, 0x01, 0x0a, 0x11, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x61,
	0x72, 0x6d, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x75, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x55, 0x6f, 0x6d, 0x22, 0x8b, 0x03, 0x0a, 0x16, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x66,
	0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x32,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x34,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x34, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x32, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x33, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x33, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x34, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x35, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x35,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x36, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x36, 0x12, 0x57, 0x0a, 0x16, 0x75, 0x6c,
	0x74, 0x72, 0x61, 0x66, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x66, 0x72,
	0x75, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x66, 0x6c, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x75, 0x6c,
	0x74, 0x72, 0x61, 0x66, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x19, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x66, 0x6c, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x66, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x66, 0x63, 0x4b, 0x65, 0x79, 0x4d, 0x61,
	0x73, 0x6b, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x36, 0x0a, 0x1a, 0x55, 0x6c, 0x74, 0x72,
	0x61, 0x66, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x5d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2a,
	0x36, 0x0a, 0x14, 0x46, 0x66, 0x72, 0x75, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x47, 0x4e, 0x4f, 0x52,
	0x45, 0x5f, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x44, 0x4f, 0x5f, 0x50,
	0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0x01, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x32, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f, 0x75,
	0x6c, 0x74, 0x72, 0x61, 0x66, 0x6c, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x66, 0x72, 0x75,
	0x69, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x66, 0x72, 0x75, 0x69, 0x74, 0x5f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tfruit_v1_tfruit_proto_rawDescOnce sync.Once
	file_tfruit_v1_tfruit_proto_rawDescData = file_tfruit_v1_tfruit_proto_rawDesc
)

func file_tfruit_v1_tfruit_proto_rawDescGZIP() []byte {
	file_tfruit_v1_tfruit_proto_rawDescOnce.Do(func() {
		file_tfruit_v1_tfruit_proto_rawDescData = protoimpl.X.CompressGZIP(file_tfruit_v1_tfruit_proto_rawDescData)
	})
	return file_tfruit_v1_tfruit_proto_rawDescData
}

var file_tfruit_v1_tfruit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tfruit_v1_tfruit_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_tfruit_v1_tfruit_proto_goTypes = []interface{}{
	(FfruitSpecialCommand)(0),          // 0: tfruit.v1.FfruitSpecialCommand
	(*UltraflyConfiguration)(nil),      // 1: tfruit.v1.UltraflyConfiguration
	(*UltraflySignedMessage)(nil),      // 2: tfruit.v1.UltraflySignedMessage
	(*ReaderPing)(nil),                 // 3: tfruit.v1.ReaderPing
	(*ReaderPong)(nil),                 // 4: tfruit.v1.ReaderPong
	(*BasketScanInfo)(nil),             // 5: tfruit.v1.BasketScanInfo
	(*CardScanInfo)(nil),               // 6: tfruit.v1.CardScanInfo
	(*StationInfo)(nil),                // 7: tfruit.v1.StationInfo
	(*TfruitBasketMessage)(nil),        // 8: tfruit.v1.TfruitBasketMessage
	(*BasketLogRequest)(nil),           // 9: tfruit.v1.BasketLogRequest
	(*BasketLogResponse)(nil),          // 10: tfruit.v1.BasketLogResponse
	(*UltraflyStatusResponse)(nil),     // 11: tfruit.v1.UltraflyStatusResponse
	(*UltraflySignKeySetRequest)(nil),  // 12: tfruit.v1.UltraflySignKeySetRequest
	(*UltraflySignKeySetResponse)(nil), // 13: tfruit.v1.UltraflySignKeySetResponse
	(*ContactInfo)(nil),                // 14: tfruit.v1.ContactInfo
	(v1.FfruitSpecialCommand)(0),       // 15: ffruit.v1.FfruitSpecialCommand
}
var file_tfruit_v1_tfruit_proto_depIdxs = []int32{
	15, // 0: tfruit.v1.BasketScanInfo.command:type_name -> ffruit.v1.FfruitSpecialCommand
	15, // 1: tfruit.v1.TfruitBasketMessage.command:type_name -> ffruit.v1.FfruitSpecialCommand
	8,  // 2: tfruit.v1.BasketLogRequest.tfruit_basket:type_name -> tfruit.v1.TfruitBasketMessage
	1,  // 3: tfruit.v1.UltraflyStatusResponse.ultrafly_configuration:type_name -> tfruit.v1.UltraflyConfiguration
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_tfruit_v1_tfruit_proto_init() }
func file_tfruit_v1_tfruit_proto_init() {
	if File_tfruit_v1_tfruit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tfruit_v1_tfruit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UltraflyConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UltraflySignedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReaderPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReaderPong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasketScanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardScanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TfruitBasketMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasketLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasketLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UltraflyStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UltraflySignKeySetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UltraflySignKeySetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tfruit_v1_tfruit_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tfruit_v1_tfruit_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tfruit_v1_tfruit_proto_goTypes,
		DependencyIndexes: file_tfruit_v1_tfruit_proto_depIdxs,
		EnumInfos:         file_tfruit_v1_tfruit_proto_enumTypes,
		MessageInfos:      file_tfruit_v1_tfruit_proto_msgTypes,
	}.Build()
	File_tfruit_v1_tfruit_proto = out.File
	file_tfruit_v1_tfruit_proto_rawDesc = nil
	file_tfruit_v1_tfruit_proto_goTypes = nil
	file_tfruit_v1_tfruit_proto_depIdxs = nil
}
