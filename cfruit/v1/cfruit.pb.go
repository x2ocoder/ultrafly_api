// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.12.0
// source: cfruit/v1/cfruit.proto

package cfruit_v1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CfruitConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ultrafly Integration
	MqttUri             string `protobuf:"bytes,5,opt,name=mqtt_uri,json=mqttUri,proto3" json:"mqtt_uri,omitempty"` // Example: "tcp://mosquitto:1883"
	MqttUsername        string `protobuf:"bytes,6,opt,name=mqtt_username,json=mqttUsername,proto3" json:"mqtt_username,omitempty"`
	MqttPassword        string `protobuf:"bytes,7,opt,name=mqtt_password,json=mqttPassword,proto3" json:"mqtt_password,omitempty"`
	MqttClientId        string `protobuf:"bytes,8,opt,name=mqtt_client_id,json=mqttClientId,proto3" json:"mqtt_client_id,omitempty"`
	UksrState           string `protobuf:"bytes,9,opt,name=uksr_state,json=uksrState,proto3" json:"uksr_state,omitempty"`
	MineralPath         string `protobuf:"bytes,10,opt,name=mineral_path,json=mineralPath,proto3" json:"mineral_path,omitempty"`                            // License path
	Iz7KListenSpec      string `protobuf:"bytes,2,opt,name=iz7k_listen_spec,json=iz7kListenSpec,proto3" json:"iz7k_listen_spec,omitempty"`                  // Example: ":2048"
	GormDbEngine        string `protobuf:"bytes,3,opt,name=gorm_db_engine,json=gormDbEngine,proto3" json:"gorm_db_engine,omitempty"`                        // Example: "mysql"
	GormDbUrl           string `protobuf:"bytes,4,opt,name=gorm_db_url,json=gormDbUrl,proto3" json:"gorm_db_url,omitempty"`                                 // Example: "username:password@(hostname)/database?charset=utf8mb4&parseTime=True&loc=Local"
	ClearlyMac          string `protobuf:"bytes,20,opt,name=clearly_mac,json=clearlyMac,proto3" json:"clearly_mac,omitempty"`                               // 12.hex
	ItemPrimaryField    string `protobuf:"bytes,30,opt,name=item_primary_field,json=itemPrimaryField,proto3" json:"item_primary_field,omitempty"`           // ItemNo
	SafetyRecordSeconds uint32 `protobuf:"varint,31,opt,name=safety_record_seconds,json=safetyRecordSeconds,proto3" json:"safety_record_seconds,omitempty"` //  how long to hold nfc records for
	RssiAttach          uint32 `protobuf:"varint,41,opt,name=rssi_attach,json=rssiAttach,proto3" json:"rssi_attach,omitempty"`                              //  Minimum RSSI of UHF Tag to qualify for "On Scale"
	RssiDetach          uint32 `protobuf:"varint,42,opt,name=rssi_detach,json=rssiDetach,proto3" json:"rssi_detach,omitempty"`                              // RSSI Below which we will remove interest for tag
	FarmerCardGrace     uint32 `protobuf:"varint,51,opt,name=farmer_card_grace,json=farmerCardGrace,proto3" json:"farmer_card_grace,omitempty"`             // Number of seconds to wait for farmer card to be presented after basket read
}

func (x *CfruitConfig) Reset() {
	*x = CfruitConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfruit_v1_cfruit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfruitConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfruitConfig) ProtoMessage() {}

func (x *CfruitConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cfruit_v1_cfruit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfruitConfig.ProtoReflect.Descriptor instead.
func (*CfruitConfig) Descriptor() ([]byte, []int) {
	return file_cfruit_v1_cfruit_proto_rawDescGZIP(), []int{0}
}

func (x *CfruitConfig) GetMqttUri() string {
	if x != nil {
		return x.MqttUri
	}
	return ""
}

func (x *CfruitConfig) GetMqttUsername() string {
	if x != nil {
		return x.MqttUsername
	}
	return ""
}

func (x *CfruitConfig) GetMqttPassword() string {
	if x != nil {
		return x.MqttPassword
	}
	return ""
}

func (x *CfruitConfig) GetMqttClientId() string {
	if x != nil {
		return x.MqttClientId
	}
	return ""
}

func (x *CfruitConfig) GetUksrState() string {
	if x != nil {
		return x.UksrState
	}
	return ""
}

func (x *CfruitConfig) GetMineralPath() string {
	if x != nil {
		return x.MineralPath
	}
	return ""
}

func (x *CfruitConfig) GetIz7KListenSpec() string {
	if x != nil {
		return x.Iz7KListenSpec
	}
	return ""
}

func (x *CfruitConfig) GetGormDbEngine() string {
	if x != nil {
		return x.GormDbEngine
	}
	return ""
}

func (x *CfruitConfig) GetGormDbUrl() string {
	if x != nil {
		return x.GormDbUrl
	}
	return ""
}

func (x *CfruitConfig) GetClearlyMac() string {
	if x != nil {
		return x.ClearlyMac
	}
	return ""
}

func (x *CfruitConfig) GetItemPrimaryField() string {
	if x != nil {
		return x.ItemPrimaryField
	}
	return ""
}

func (x *CfruitConfig) GetSafetyRecordSeconds() uint32 {
	if x != nil {
		return x.SafetyRecordSeconds
	}
	return 0
}

func (x *CfruitConfig) GetRssiAttach() uint32 {
	if x != nil {
		return x.RssiAttach
	}
	return 0
}

func (x *CfruitConfig) GetRssiDetach() uint32 {
	if x != nil {
		return x.RssiDetach
	}
	return 0
}

func (x *CfruitConfig) GetFarmerCardGrace() uint32 {
	if x != nil {
		return x.FarmerCardGrace
	}
	return 0
}

type CfruitStateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     int32  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	AntennaNo int32  `protobuf:"varint,2,opt,name=antenna_no,json=antennaNo,proto3" json:"antenna_no,omitempty"`
	State     string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"` // Restart, AwaitBox, ReadTag, SendWeight, AwaitWeight, LogResult, Error
}

func (x *CfruitStateMessage) Reset() {
	*x = CfruitStateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfruit_v1_cfruit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfruitStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfruitStateMessage) ProtoMessage() {}

func (x *CfruitStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cfruit_v1_cfruit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfruitStateMessage.ProtoReflect.Descriptor instead.
func (*CfruitStateMessage) Descriptor() ([]byte, []int) {
	return file_cfruit_v1_cfruit_proto_rawDescGZIP(), []int{1}
}

func (x *CfruitStateMessage) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *CfruitStateMessage) GetAntennaNo() int32 {
	if x != nil {
		return x.AntennaNo
	}
	return 0
}

func (x *CfruitStateMessage) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type CfruitStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`     // Inform UI about Error Problem
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Just annoucing state
}

func (x *CfruitStatus) Reset() {
	*x = CfruitStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfruit_v1_cfruit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfruitStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfruitStatus) ProtoMessage() {}

func (x *CfruitStatus) ProtoReflect() protoreflect.Message {
	mi := &file_cfruit_v1_cfruit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfruitStatus.ProtoReflect.Descriptor instead.
func (*CfruitStatus) Descriptor() ([]byte, []int) {
	return file_cfruit_v1_cfruit_proto_rawDescGZIP(), []int{2}
}

func (x *CfruitStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CfruitStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// TODO: Define message carriers between UHF and NFC
// Fill User Bank with default info
type CfruitUserBankData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epc   string `protobuf:"bytes,1,opt,name=epc,proto3" json:"epc,omitempty"` // HexString (must decode if you want Binary)
	AppId []byte `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *CfruitUserBankData) Reset() {
	*x = CfruitUserBankData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfruit_v1_cfruit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfruitUserBankData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfruitUserBankData) ProtoMessage() {}

func (x *CfruitUserBankData) ProtoReflect() protoreflect.Message {
	mi := &file_cfruit_v1_cfruit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfruitUserBankData.ProtoReflect.Descriptor instead.
func (*CfruitUserBankData) Descriptor() ([]byte, []int) {
	return file_cfruit_v1_cfruit_proto_rawDescGZIP(), []int{3}
}

func (x *CfruitUserBankData) GetEpc() string {
	if x != nil {
		return x.Epc
	}
	return ""
}

func (x *CfruitUserBankData) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

var File_cfruit_v1_cfruit_proto protoreflect.FileDescriptor

var file_cfruit_v1_cfruit_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x66, 0x72, 0x75, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x66, 0x72, 0x75,
	0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x66, 0x72, 0x75, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x22, 0xbc, 0x04, 0x0a, 0x0c, 0x43, 0x66, 0x72, 0x75, 0x69, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x71, 0x74, 0x74, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x71, 0x74, 0x74, 0x55, 0x72, 0x69, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x71, 0x74, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x71, 0x74, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x71, 0x74, 0x74, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x71, 0x74,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x71, 0x74,
	0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x71, 0x74, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x6b, 0x73, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6b, 0x73, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x7a, 0x37, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x7a, 0x37,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x67,
	0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6f, 0x72, 0x6d, 0x44, 0x62, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x72, 0x6d, 0x44, 0x62, 0x55, 0x72,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x63,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x4d,
	0x61, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x69, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x32, 0x0a, 0x15, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x13, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x73, 0x73, 0x69, 0x5f, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x73, 0x73, 0x69, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x73, 0x73, 0x69, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x73, 0x73, 0x69,
	0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x61, 0x72, 0x6d, 0x65, 0x72,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x63, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x47, 0x72, 0x61,
	0x63, 0x65, 0x22, 0x5f, 0x0a, 0x12, 0x43, 0x66, 0x72, 0x75, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x4e, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x3e, 0x0a, 0x0c, 0x43, 0x66, 0x72, 0x75, 0x69, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x12, 0x43, 0x66, 0x72, 0x75, 0x69, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x70, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x70, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x42, 0x15, 0x5a, 0x13, 0x63, 0x66, 0x72, 0x75, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x3b,
	0x63, 0x66, 0x72, 0x75, 0x69, 0x74, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_cfruit_v1_cfruit_proto_rawDescOnce sync.Once
	file_cfruit_v1_cfruit_proto_rawDescData = file_cfruit_v1_cfruit_proto_rawDesc
)

func file_cfruit_v1_cfruit_proto_rawDescGZIP() []byte {
	file_cfruit_v1_cfruit_proto_rawDescOnce.Do(func() {
		file_cfruit_v1_cfruit_proto_rawDescData = protoimpl.X.CompressGZIP(file_cfruit_v1_cfruit_proto_rawDescData)
	})
	return file_cfruit_v1_cfruit_proto_rawDescData
}

var file_cfruit_v1_cfruit_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cfruit_v1_cfruit_proto_goTypes = []interface{}{
	(*CfruitConfig)(nil),       // 0: cfruit.v1.CfruitConfig
	(*CfruitStateMessage)(nil), // 1: cfruit.v1.CfruitStateMessage
	(*CfruitStatus)(nil),       // 2: cfruit.v1.CfruitStatus
	(*CfruitUserBankData)(nil), // 3: cfruit.v1.CfruitUserBankData
}
var file_cfruit_v1_cfruit_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cfruit_v1_cfruit_proto_init() }
func file_cfruit_v1_cfruit_proto_init() {
	if File_cfruit_v1_cfruit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cfruit_v1_cfruit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfruitConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cfruit_v1_cfruit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfruitStateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cfruit_v1_cfruit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfruitStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cfruit_v1_cfruit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfruitUserBankData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cfruit_v1_cfruit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cfruit_v1_cfruit_proto_goTypes,
		DependencyIndexes: file_cfruit_v1_cfruit_proto_depIdxs,
		MessageInfos:      file_cfruit_v1_cfruit_proto_msgTypes,
	}.Build()
	File_cfruit_v1_cfruit_proto = out.File
	file_cfruit_v1_cfruit_proto_rawDesc = nil
	file_cfruit_v1_cfruit_proto_goTypes = nil
	file_cfruit_v1_cfruit_proto_depIdxs = nil
}
