// source: dacs/v1/dacs.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.dacs.v1.DacsCmdP', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dacs.v1.DacsCmdP = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dacs.v1.DacsCmdP, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dacs.v1.DacsCmdP.displayName = 'proto.dacs.v1.DacsCmdP';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dacs.v1.DacsCmdP.prototype.toObject = function(opt_includeInstance) {
  return proto.dacs.v1.DacsCmdP.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dacs.v1.DacsCmdP} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dacs.v1.DacsCmdP.toObject = function(includeInstance, msg) {
  var f, obj = {
    presetNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    capacity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    weightUnit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    weightMode: jspb.Message.getFieldWithDefault(msg, 4, 0),
    referenceWeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    upperDeltaAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    lowerDeltaAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    upperDeltaMode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lowerDeltaMode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    productLengthMm: jspb.Message.getFieldWithDefault(msg, 10, 0),
    rejectStartDelayRight: jspb.Message.getFieldWithDefault(msg, 11, 0),
    rejectOnTimeRight: jspb.Message.getFieldWithDefault(msg, 12, 0),
    rejectStartDelayLeft: jspb.Message.getFieldWithDefault(msg, 13, 0),
    rejectOnTimeLeft: jspb.Message.getFieldWithDefault(msg, 14, 0),
    productName: jspb.Message.getFieldWithDefault(msg, 15, ""),
    productCode: jspb.Message.getFieldWithDefault(msg, 16, ""),
    overWeightAccept: jspb.Message.getFieldWithDefault(msg, 17, 0),
    metalDetection: jspb.Message.getFieldWithDefault(msg, 18, 0),
    tareWeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, 0.0),
    nominalWeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 20, 0.0),
    t1Weight: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    t2Weight: jspb.Message.getFloatingPointFieldWithDefault(msg, 22, 0.0),
    ext1OutDelayTime: jspb.Message.getFieldWithDefault(msg, 23, 0),
    ext2OutDelayTime: jspb.Message.getFieldWithDefault(msg, 24, 0),
    ext3OutDelayTime: jspb.Message.getFieldWithDefault(msg, 25, 0),
    ext4OutDelayTime: jspb.Message.getFieldWithDefault(msg, 26, 0),
    ext5OutDelayTime: jspb.Message.getFieldWithDefault(msg, 27, 0),
    ext6OutDelayTime: jspb.Message.getFieldWithDefault(msg, 28, 0),
    ext1InputDelayTime: jspb.Message.getFieldWithDefault(msg, 29, 0),
    ext2InputDelayTime: jspb.Message.getFieldWithDefault(msg, 30, 0),
    continuousNoGoodCount: jspb.Message.getFieldWithDefault(msg, 31, 0),
    infeedConveyorSpeed: jspb.Message.getFieldWithDefault(msg, 32, 0),
    weighConveyorSpeed: jspb.Message.getFieldWithDefault(msg, 33, 0),
    rejectConveyorSpeed: jspb.Message.getFieldWithDefault(msg, 34, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dacs.v1.DacsCmdP}
 */
proto.dacs.v1.DacsCmdP.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dacs.v1.DacsCmdP;
  return proto.dacs.v1.DacsCmdP.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dacs.v1.DacsCmdP} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dacs.v1.DacsCmdP}
 */
proto.dacs.v1.DacsCmdP.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPresetNumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCapacity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWeightUnit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWeightMode(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReferenceWeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUpperDeltaAmount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLowerDeltaAmount(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpperDeltaMode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLowerDeltaMode(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProductLengthMm(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRejectStartDelayRight(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRejectOnTimeRight(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRejectStartDelayLeft(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRejectOnTimeLeft(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductName(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductCode(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOverWeightAccept(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMetalDetection(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTareWeight(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNominalWeight(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setT1Weight(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setT2Weight(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExt1OutDelayTime(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExt2OutDelayTime(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExt3OutDelayTime(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExt4OutDelayTime(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExt5OutDelayTime(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExt6OutDelayTime(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExt1InputDelayTime(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExt2InputDelayTime(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setContinuousNoGoodCount(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInfeedConveyorSpeed(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWeighConveyorSpeed(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRejectConveyorSpeed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dacs.v1.DacsCmdP.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dacs.v1.DacsCmdP.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dacs.v1.DacsCmdP} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dacs.v1.DacsCmdP.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPresetNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCapacity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWeightUnit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWeightMode();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getReferenceWeight();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getUpperDeltaAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getLowerDeltaAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getUpperDeltaMode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLowerDeltaMode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getProductLengthMm();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getRejectStartDelayRight();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getRejectOnTimeRight();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getRejectStartDelayLeft();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getRejectOnTimeLeft();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getProductName();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getProductCode();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getOverWeightAccept();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getMetalDetection();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getTareWeight();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getNominalWeight();
  if (f !== 0.0) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = message.getT1Weight();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getT2Weight();
  if (f !== 0.0) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = message.getExt1OutDelayTime();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getExt2OutDelayTime();
  if (f !== 0) {
    writer.writeInt32(
      24,
      f
    );
  }
  f = message.getExt3OutDelayTime();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getExt4OutDelayTime();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getExt5OutDelayTime();
  if (f !== 0) {
    writer.writeInt32(
      27,
      f
    );
  }
  f = message.getExt6OutDelayTime();
  if (f !== 0) {
    writer.writeInt32(
      28,
      f
    );
  }
  f = message.getExt1InputDelayTime();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = message.getExt2InputDelayTime();
  if (f !== 0) {
    writer.writeInt32(
      30,
      f
    );
  }
  f = message.getContinuousNoGoodCount();
  if (f !== 0) {
    writer.writeInt32(
      31,
      f
    );
  }
  f = message.getInfeedConveyorSpeed();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = message.getWeighConveyorSpeed();
  if (f !== 0) {
    writer.writeInt32(
      33,
      f
    );
  }
  f = message.getRejectConveyorSpeed();
  if (f !== 0) {
    writer.writeInt32(
      34,
      f
    );
  }
};


/**
 * optional int32 preset_number = 1;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getPresetNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setPresetNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 capacity = 2;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getCapacity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setCapacity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 weight_unit = 3;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getWeightUnit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setWeightUnit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 weight_mode = 4;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getWeightMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setWeightMode = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double reference_weight = 5;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getReferenceWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setReferenceWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double upper_delta_amount = 6;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getUpperDeltaAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setUpperDeltaAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double lower_delta_amount = 7;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getLowerDeltaAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setLowerDeltaAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string upper_delta_mode = 8;
 * @return {string}
 */
proto.dacs.v1.DacsCmdP.prototype.getUpperDeltaMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setUpperDeltaMode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string lower_delta_mode = 9;
 * @return {string}
 */
proto.dacs.v1.DacsCmdP.prototype.getLowerDeltaMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setLowerDeltaMode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 product_length_mm = 10;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getProductLengthMm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setProductLengthMm = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 reject_start_delay_right = 11;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getRejectStartDelayRight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setRejectStartDelayRight = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 reject_on_time_right = 12;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getRejectOnTimeRight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setRejectOnTimeRight = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 reject_start_delay_left = 13;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getRejectStartDelayLeft = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setRejectStartDelayLeft = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 reject_on_time_left = 14;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getRejectOnTimeLeft = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setRejectOnTimeLeft = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string product_name = 15;
 * @return {string}
 */
proto.dacs.v1.DacsCmdP.prototype.getProductName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setProductName = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string product_code = 16;
 * @return {string}
 */
proto.dacs.v1.DacsCmdP.prototype.getProductCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setProductCode = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional int32 over_weight_accept = 17;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getOverWeightAccept = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setOverWeightAccept = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 metal_detection = 18;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getMetalDetection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setMetalDetection = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional double tare_weight = 19;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getTareWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setTareWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional double nominal_weight = 20;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getNominalWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setNominalWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional double t1_weight = 21;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getT1Weight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setT1Weight = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional double t2_weight = 22;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getT2Weight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setT2Weight = function(value) {
  return jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional int32 ext1_out_delay_time = 23;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getExt1OutDelayTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setExt1OutDelayTime = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional int32 ext2_out_delay_time = 24;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getExt2OutDelayTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setExt2OutDelayTime = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional int32 ext3_out_delay_time = 25;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getExt3OutDelayTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setExt3OutDelayTime = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int32 ext4_out_delay_time = 26;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getExt4OutDelayTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setExt4OutDelayTime = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional int32 ext5_out_delay_time = 27;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getExt5OutDelayTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setExt5OutDelayTime = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional int32 ext6_out_delay_time = 28;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getExt6OutDelayTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setExt6OutDelayTime = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional int32 ext1_input_delay_time = 29;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getExt1InputDelayTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setExt1InputDelayTime = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional int32 ext2_input_delay_time = 30;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getExt2InputDelayTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setExt2InputDelayTime = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional int32 continuous_no_good_count = 31;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getContinuousNoGoodCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setContinuousNoGoodCount = function(value) {
  return jspb.Message.setProto3IntField(this, 31, value);
};


/**
 * optional int32 infeed_conveyor_speed = 32;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getInfeedConveyorSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setInfeedConveyorSpeed = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional int32 weigh_conveyor_speed = 33;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getWeighConveyorSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setWeighConveyorSpeed = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional int32 reject_conveyor_speed = 34;
 * @return {number}
 */
proto.dacs.v1.DacsCmdP.prototype.getRejectConveyorSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.dacs.v1.DacsCmdP} returns this
 */
proto.dacs.v1.DacsCmdP.prototype.setRejectConveyorSpeed = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};


goog.object.extend(exports, proto.dacs.v1);
